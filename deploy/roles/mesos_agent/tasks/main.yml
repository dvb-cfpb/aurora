# mesos-agent/main.yml
---

### SETUP MESOS REPOSITORIES AND INSTALL


- name: Enable the "overlay" kernel module
  modprobe:
    name: overlay
    state: present
  tags:
    - mesos
    - mesos-agent

- name: Add mesosphere repository
  command: "rpm -Uvh http://repos.mesosphere.io/el/7/noarch/RPMS/mesosphere-el-repo-7-1.noarch.rpm"
  args:
    creates: /etc/yum.repos.d/mesosphere.repo
  #when: not 'production' in group_names
  tags:
    - mesos
    - mesos-agent

- name: Check if /usr/include/mesos/slave is a link
  stat:
    path: /usr/include/mesos/slave
  register: mesos_is_link
  when: mesos_agent_fix_link
  tags:
    - mesos
    - mesos-agent

- name: Fix the "slave" to "agent" link if needed
  file:
    dest: /usr/include/mesos/slave
    state: absent
  when: mesos_agent_fix_link and mesos_is_link.stat.islnk is defined and not mesos_is_link.stat.islnk
  tags:
    - mesos
    - mesos-agent

- name: Install yum versionlock plugin
  yum:
    name: yum-plugin-versionlock
    state: present
  tags:
    - mesos
    - mesos-agent

- name: Install mesos packages
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ mesos_agent_package }}"
    - libselinux-python
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Versionlock mesos/marathon packages
  command: yum versionlock mesos* marathon
  tags:
    - mesos
    - mesos-agent

- name: Clean up RPM generated files in the config directory
  file:
    path: "{{ item }}"
    state: absent
  with_fileglob:
    - /etc/mesos-slave/*.rpmnew
    - /etc/mesos/*.rpmnew
  tags:
    - mesos
    - mesos-agent

- name: Stop the Mesos master process
  systemd:
    name: mesos-master
    state: stopped
    enabled: False
  tags:
    - mesos
    - mesos-agent

# FYI, only works on newer versions of Upstart, not RHEL 6
# - name: Override the mesos-master service
#  copy:
#    dest: /etc/init/mesos-master.conf.override
#    content: manual
#  tags:
#    - mesos
#    - mesos-agent

### CONFIGURE MESOS AGENT

- name: Configure zookeeper with the IP's of all masters
  template:
    src: zk.j2
    dest: /etc/mesos/zk
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent
  when: '"mesos_master" in groups'

- name: Add the ip address to the Mesos agent config folder
  copy:
    dest: /etc/mesos-slave/ip
    content: "{{ aurora_hostname }}"
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Add the ip to the hostname file too
  copy:
    dest: /etc/mesos-slave/hostname
    content: "{{ aurora_hostname }}"
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Configure port for Mesos to run on
  copy:
    dest: /etc/mesos-slave/port
    content: "{{ mesos_agent_port }}"
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Configure logging level
  copy:
    dest: /etc/mesos-slave/logging_level
    content: "{{ mesos_agent_logging_level }}"
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Add isolation to mesos client
  copy:
    dest: /etc/mesos-slave/isolation
    content: "{{ mesos_agent_isolation }}"
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Configure correct cgroups route
  copy:
    dest: /etc/mesos-slave/cgroups_hierarchy
    content: "{{ mesos_agent_cgroups_path }}"
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Set any customized attributes
  copy:
    dest: /etc/mesos-slave/attributes
    content: "{{ mesos_agent_attributes }}"
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Create credential file, if needed
  copy:
    dest: "{{ mesos_agent_credential }}"
    content: "{{ mesos_agent_principal }} {{ mesos_agent_secret }}"
    mode: 0600
  when: mesos_agent_credential is defined
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Configure Mesos agent to use credential
  copy:
    dest: /etc/mesos-slave/credential
    content: "{{ mesos_agent_credential }}"
  when: mesos_agent_credential is defined
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Make Mesos working directory
  file:
    dest: "{{ mesos_agent_work_dir }}"
    state: directory
    mode: 0755
  tags:
    - mesos
    - mesos-agent

- name: Configure working directory
  copy:
    dest: /etc/mesos-slave/work_dir
    content: "{{ mesos_agent_work_dir }}"
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Create mesos main group
  group:
    name: "{{ marathon_mesos_user }}"
    gid: "{{ marathon_mesos_gid }}"
- name: Create mesos user
  user:
    name: "{{ marathon_mesos_user }}"
    uid: "{{ marathon_mesos_uid }}"
    group: "{{ marathon_mesos_user }}"
    groups: "{{ marathon_mesos_extra_groups }}"
    comment: "Mesos User"
    home: /home/{{ marathon_mesos_user }}
  tags:
    - mesos
    - mesos-agent

### Containerization

- name: Configure containerizers
  copy:
    dest: /etc/mesos-slave/containerizers
    content: "{{ mesos_containerizers }}"
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Configure container launcher
  copy:
    dest: /etc/mesos-slave/launcher
    content: "{{ mesos_launcher }}"
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Configure image providers
  copy:
    dest: /etc/mesos-slave/image_providers
    content: "{{ mesos_image_providers }}"
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Configure image backends
  copy:
    dest: /etc/mesos-slave/image_provisioner_backend
    content: "{{ mesos_agent_image_backend }}"
  notify:
    - restart mesos-agent
  when: mesos_agent_version | version_compare('1.2.0', '>=')
  tags:
    - mesos
    - mesos-agent

- name: Configure container default DNS
  template:
    src: default_container_dns.j2
    dest: /etc/mesos-slave/default_container_dns
  notify:
    - restart mesos-agent
  when: mesos_agent_version | version_compare('1.4.0', '>=')
  tags:
    - mesos
    - mesos-agent

- name: Configure default container info
  template:
    src: default_container_info.j2
    dest: /etc/mesos-slave/default_container_info
  notify:
    - restart mesos-agent
  when:  mesos_agent_version | version_compare('1.4.0', '>=')
  tags:
    - mesos
    - mesos-agent

- name: Configure default container info
  template:
    src: default_container_info.j2
    dest: /etc/mesos-slave/default_container_info
  tags:
    - mesos
    - mesos-agent

### AppC Container Images

- name: Configure AppC URI
  copy:
    dest: /etc/mesos-slave/appc_simple_discovery_uri_prefix
    content: "{{ mesos_appc_simple_discovery_uri_prefix }}"
  when: mesos_appc_enable
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Ensure AppC URI exists, if file
  file:
    state: directory
    dest: "{{ mesos_appc_simple_discovery_uri_prefix[7:] }}"
    mode: 0755
  when: mesos_appc_enable and mesos_appc_simple_discovery_uri_prefix[:7] == "file://"
  tags:
    - mesos
    - mesos-agent

- name: Configure AppC image cache
  copy:
    dest: /etc/mesos-slave/appc_store_dir
    content: "{{ mesos_appc_store_dir }}"
  when: mesos_appc_enable
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

### Docker container images

- name: Configure Docker image cache
  copy:
    dest: /etc/mesos-slave/docker_store_dir
    content: "{{ mesos_docker_store_dir }}"
  when: mesos_docker_enable
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Configure Docker registry
  copy:
    dest: /etc/mesos-slave/docker_registry
    content: "{{ mesos_docker_registry }}"
  when: mesos_docker_enable
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Create Docker registery directory, if needed
  file:
    dest: "{{ mesos_docker_registry }}"
    state: directory
    mode: 0755
  when: mesos_docker_enable and not mesos_docker_registry[:8] == "https://"
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

- name: Configure executor registration timeout
  copy:
    dest: /etc/mesos-slave/executor_registration_timeout
    content: "{{ mesos_executor_registration_timeout }}"
  notify:
    - restart mesos-agent
  tags:
    - mesos
    - mesos-agent

### SETUP IP TABLES AND START MESOS AGENT

- name: Open required ports
  command: "iptables -I {{ iptables_chain }} 2 -m state --state NEW -p tcp --dport {{ item }} -j ACCEPT"
  with_items:
    - '5051'
    - '31000:32000'
  tags:
    - mesos
    - mesos-agent

  when: iptables_config | bool
  tags:
    - mesos
    - mesos-agent

- name: Save iptables
  command: "/sbin/service iptables save"
  when: iptables_config | bool
  notify:
    - restart iptables
  tags:
    - mesos
    - mesos-agent

- name: Start the Mesos agent
  systemd:
    name: mesos-slave
    state: started
    enabled: yes
  tags:
    - mesos
    - mesos-agent

- name: Set recursive admin permissions on log folders
  acl:
    path: "{{ item }}"
    entity: "{{ restricted_group_name }}"
    etype: group
    permissions: rX
    recursive: yes
    state: present
  with_items: "{{ mesos_agent_log_file_locations }}"
  tags:
    - mesos
    - mesos-agent

- name: Set default admin permissions on log folders
  acl:
    path: "{{ item }}"
    entity: "{{ restricted_group_name }}"
    etype: group
    permissions: rX
    default: yes
    state: present
  with_items: "{{ mesos_agent_log_file_locations }}"
  tags:
    - mesos
    - mesos-agent
